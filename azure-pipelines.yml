strategy:
  matrix:
    windows:
      image: 'vs2017-win2016'
      standard: 'netstandard2.0'
    mac:
      image: 'macos-10.13'
      standard: 'netstandard2.0'
    linux:
      image: 'ubuntu-16.04'
      standard: 'netstandard2.0'

pool:
  vmImage: $(image)

steps:
  - task: DotNetCoreInstaller@0
    displayName: Install
    inputs:
      version: '2.1.505'
  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: build
      projects: '**/Pfim.csproj'
      arguments: -f $(standard)
  - task: DotNetCoreCLI@2
    displayName: ImageSharp Sample Build
    inputs:
      command: build
      projects: '**/Pfim.ImageSharp.csproj'
  - task: DotNetCoreCLI@2
    displayName: Skia Sample Build
    inputs:
      command: build
      projects: '**/Pfim.Skia.csproj'
  - task: DotNetCoreCLI@2
    displayName: Windows Test
    condition: eq(variables['image'], 'vs2017-win2016')
    inputs:
      command: test
      projects: '**/*Tests.csproj'
      arguments: '-f netcoreapp2.0 --collect "Code coverage"'
  - task: DotNetCoreCLI@2
    displayName: Test
    condition: ne(variables['image'], 'vs2017-win2016')
    inputs:
      command: test
      projects: '**/*Tests.csproj'
      arguments: '-f netcoreapp2.0'
      publishTestResults: false
